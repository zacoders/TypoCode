from transformers import AutoTokenizer, AutoModelForCausalLM
import torch

# model_id = "microsoft/phi-2"
# model_id = "ai-forever/rugpt3medium_based_on_gpt2"

# model_id = "sberbank-ai/rugpt3large_based_on_gpt2"
model_id = "t-tech/T-lite-it-1.0"

tokenizer = AutoTokenizer.from_pretrained(model_id)
model = AutoModelForCausalLM.from_pretrained(
    model_id,
    load_in_8bit=True,          # 8-–±–∏—Ç –∫–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏–µ ‚Äî –≤–ª–µ–∑–∞–µ—Ç –≤ VRAM
    device_map="auto"           # –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç GPU
)


def chat(words: list[str], letters: list[str], combos: list[str]):
    prompt = f"""
        –ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –∏–∑ 10 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, –≤–∫–ª—é—á–∞–π —ç—Ç–∏ —Å–ª–æ–≤–∞: '{', '.join(words)}', –∏ —Å–ª–æ–≤–∞ –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —ç—Ç–∏ –±—É–∫–≤—ã '{', '.join(letters)}', –∏ —ç—Ç–∏ —Å–æ—á–µ—Ç–∞–Ω–∏—è –±—É–∫–≤ '{', '.join(combos)}'.
        –ü–∏—à–∏ —Ç–∞–∫ —á—Ç–æ–±—ã –±—ã–ª–æ –ò–ù–¢–ï–†–ï–°–ù–û, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∞–∫—Ç—ã, –Ω–∞–∑–≤–∞–Ω–∏—è, –Ω–æ–≤–æ—Å—Ç–∏, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è, –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.

        –í–æ—Ç —Ç–µ–∫—Å—Ç —Å—Ä–∞–∑—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –≤—Å–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º, —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –¥–µ—Ç–∞–ª–µ–π –∏ —Ñ–∞–∫—Ç–æ–≤:\n
    """
    # prompt = "–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —Ç–µ–º—É –¢–∞–Ω–∫–∏, 10 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –•–æ—Ä–æ—à–æ –≤–æ—Ç —Ç–µ–∫—Å—Ç —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö —É—Å–ª–æ–≤–∏–π: "
    print('\n\n\n')
    print(prompt)
    inputs = tokenizer(prompt, return_tensors="pt").to(model.device)
    outputs = model.generate(
        **inputs,
        max_new_tokens=500,
        do_sample=True,
        temperature=0.99,   # –Ω–∏–∂–µ = –±–æ–ª–µ–µ –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ
        top_k=30,          # –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä 30 –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤
        top_p=0.95         # –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ nucleus sampling (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ top_k)
    )
    response = tokenizer.decode(outputs[0], skip_special_tokens=True)
    print("\nüí¨ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:\n", response[len(prompt):].strip())


# words = ["–∫–æ—à–∫–∞", "–ø—Ä—ã–≥–∞—Ç—å", "–æ–∫–Ω–æ", "—Å–æ–ª–Ω—Ü–µ", "–ø–µ–π–∑–∞–∂", "—Å–º–æ—Ç—Ä–µ—Ç—å"]
# words = ["—Ç–∞–Ω–∫", "–¥—É–ª–æ", "–≥—É—Å–µ–Ω–∏—Ü–∞", "–±—Ä–æ–Ω—è", "–∫–∞–ª–∏–±—Ä", "–≤—ã—Å—Ç—Ä–µ–ª", "–ø—Ä–æ–±–∏—Ç–∏–µ"]
# words = ["–ø—Ä–æ–≥—Ä–∞–º–º–∞", "–∫–æ–¥", "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è", "–∫–ª–∞—Å—Å", "—Ü–∏–∫–ª", "—É—Å–ª–æ–≤–∏–µ", "–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"]

words = [
    "—Ç–∞–Ω–∫",
    "–¥—É–ª–æ",
    "–≥—É—Å–µ–Ω–∏—Ü–∞",
    "–±—Ä–æ–Ω—è",
    "–∫–∞–ª–∏–±—Ä",
    "–≤—ã—Å—Ç—Ä–µ–ª",
    "–ø—Ä–æ–±–∏—Ç–∏–µ",
    "–∫–æ—à–∫–∞",
    "–ø—Ä—ã–≥–∞—Ç—å",
    "–æ–∫–Ω–æ",
    "—Å–æ–ª–Ω—Ü–µ",
    "–ø–µ–π–∑–∞–∂",
    "—Å–º–æ—Ç—Ä–µ—Ç—å",
    "–ø—Ä–æ–≥—Ä–∞–º–º–∞",
    "–∫–æ–¥",
    "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è",
    "–∫–ª–∞—Å—Å",
    "—Ü–∏–∫–ª",
    "—É—Å–ª–æ–≤–∏–µ",
    "–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"]
    
letters = ["–∫", "—à", '–º', '–Ω']
combos = ["–∫–æ", "—à–∫", '—Å—Ç', '–Ω–Ω', '—É—è']

while True:
    chat(words, letters, combos)
